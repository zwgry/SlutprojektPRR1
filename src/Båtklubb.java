
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Mathias Wiström
 */
public class Båtklubb extends javax.swing.JFrame {

    private ArrayList<User> users = new ArrayList<>();
    private ArrayList<Wharf> wharfs = new ArrayList<>();
    private int docksAmount = 1;
    private int userAmount = 0;
    private int currentUser = -1;
    
    
    
    /**
     * Creates new form Båtklubb
     */
    public Båtklubb() {
        initComponents();
        
        //sets admin and user sides to disabeld
        txaAdminDisplay.setEditable(false);
        txaUserDisplay.setEditable(false);
        logoutUser();
        
        //Creats the admin and a user
        addUser("Andreas","Lindgren","password",123456789);
        users.get(0).setUName("admin");
        addUser("Mathias","Wiström","password",123456789);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        panelAdmin = new javax.swing.JPanel();
        panelAddUser = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txfFName = new javax.swing.JTextField();
        txfLName = new javax.swing.JTextField();
        txfPassword = new javax.swing.JTextField();
        txfPhone = new javax.swing.JTextField();
        btnAddUser = new javax.swing.JButton();
        panelAddWharf = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txfDocks = new javax.swing.JTextField();
        btnAddWharf = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        panelAddBoat = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txfAdminLength = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txfAdminWidth = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txfAdminType = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txfAdminOwner = new javax.swing.JTextField();
        btnAdminAddBoat = new javax.swing.JButton();
        panelDisplay = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaAdminDisplay = new javax.swing.JTextArea();
        btnClearAdminDisplay = new javax.swing.JButton();
        panelAdminSort = new javax.swing.JPanel();
        radioSortBoats = new javax.swing.JRadioButton();
        radioSortUserId = new javax.swing.JRadioButton();
        btnAdminSort = new javax.swing.JButton();
        panelAdminSearch = new javax.swing.JPanel();
        radioSearchUserId = new javax.swing.JRadioButton();
        radioAdminSearchDock = new javax.swing.JRadioButton();
        txfAdminSearch = new javax.swing.JTextField();
        btnAdminSearch = new javax.swing.JButton();
        panelAdminMessage = new javax.swing.JPanel();
        lblAdminMessage = new javax.swing.JLabel();
        btnAdminLogout = new javax.swing.JButton();
        panelRemoveUser = new javax.swing.JPanel();
        txfAdminRemove = new javax.swing.JTextField();
        btnRemoveUser = new javax.swing.JButton();
        radioRemoveUserId = new javax.swing.JRadioButton();
        radioRemoveBoat = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txfUserLength = new javax.swing.JTextField();
        txfUserWidth = new javax.swing.JTextField();
        txfUserType = new javax.swing.JTextField();
        btnUserAddBoat = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        radioSortDock = new javax.swing.JRadioButton();
        radioSortLength = new javax.swing.JRadioButton();
        btnUserSort = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        txfUserSearch = new javax.swing.JTextField();
        radioUserSearchDock = new javax.swing.JRadioButton();
        radioUserSearchUserId = new javax.swing.JRadioButton();
        btnUserSearch = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaUserDisplay = new javax.swing.JTextArea();
        btnClearUserDisplay = new javax.swing.JButton();
        btnUserLogout = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        lblUserMessage = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnRemoveBoat = new javax.swing.JButton();
        txfRemoveBoat = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblLoginMessage = new javax.swing.JLabel();
        txfLoginUName = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        txfLoginPassword = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        lblCurrentUserName = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        lblCurrentUserId = new javax.swing.JLabel();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelAdmin.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        panelAddUser.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setText("Förnamn");

        jLabel6.setText("Efternamn");

        jLabel7.setText("Lösenord");

        jLabel8.setText("Tel. Nummer");

        btnAddUser.setText("Spara användare");
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAddUserLayout = new javax.swing.GroupLayout(panelAddUser);
        panelAddUser.setLayout(panelAddUserLayout);
        panelAddUserLayout.setHorizontalGroup(
            panelAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddUserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddUser, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                    .addGroup(panelAddUserLayout.createSequentialGroup()
                        .addGroup(panelAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txfFName, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                            .addComponent(txfLName)
                            .addComponent(txfPassword)
                            .addComponent(txfPhone))))
                .addContainerGap())
        );
        panelAddUserLayout.setVerticalGroup(
            panelAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddUserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txfFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txfLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txfPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddUser)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelAddWharf.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel9.setText("Bryggplatser");

        btnAddWharf.setText("Lägg till brygga");
        btnAddWharf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddWharfActionPerformed(evt);
            }
        });

        jLabel10.setText("Bryggplatsernas nummer");

        jLabel11.setText("tilldelas automatiskt");

        javax.swing.GroupLayout panelAddWharfLayout = new javax.swing.GroupLayout(panelAddWharf);
        panelAddWharf.setLayout(panelAddWharfLayout);
        panelAddWharfLayout.setHorizontalGroup(
            panelAddWharfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddWharfLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAddWharfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddWharf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelAddWharfLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txfDocks))
                    .addGroup(panelAddWharfLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelAddWharfLayout.setVerticalGroup(
            panelAddWharfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddWharfLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAddWharfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txfDocks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addGap(3, 3, 3)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddWharf)
                .addContainerGap())
        );

        panelAddBoat.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel12.setText("Längd");

        jLabel13.setText("Bredd");

        jLabel14.setText("Typ");

        jLabel16.setText("Ägare");

        btnAdminAddBoat.setText("Spara båt");
        btnAdminAddBoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminAddBoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAddBoatLayout = new javax.swing.GroupLayout(panelAddBoat);
        panelAddBoat.setLayout(panelAddBoatLayout);
        panelAddBoatLayout.setHorizontalGroup(
            panelAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddBoatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(panelAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelAddBoatLayout.createSequentialGroup()
                        .addGroup(panelAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfAdminType, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txfAdminLength, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel16))
                        .addGap(40, 40, 40)
                        .addGroup(panelAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfAdminOwner, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txfAdminWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnAdminAddBoat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelAddBoatLayout.setVerticalGroup(
            panelAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddBoatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txfAdminLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(txfAdminWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(txfAdminOwner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelAddBoatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(txfAdminType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdminAddBoat)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelDisplay.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txaAdminDisplay.setColumns(20);
        txaAdminDisplay.setRows(5);
        jScrollPane1.setViewportView(txaAdminDisplay);
        txaAdminDisplay.getAccessibleContext().setAccessibleName("");

        btnClearAdminDisplay.setText("Rensa");
        btnClearAdminDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAdminDisplayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDisplayLayout = new javax.swing.GroupLayout(panelDisplay);
        panelDisplay.setLayout(panelDisplayLayout);
        panelDisplayLayout.setHorizontalGroup(
            panelDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDisplayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(panelDisplayLayout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(btnClearAdminDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelDisplayLayout.setVerticalGroup(
            panelDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDisplayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClearAdminDisplay)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelAdminSort.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        radioSortBoats.setText("Antal båtar");
        radioSortBoats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSortBoatsActionPerformed(evt);
            }
        });

        radioSortUserId.setText("Medlems Id");
        radioSortUserId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSortUserIdActionPerformed(evt);
            }
        });

        btnAdminSort.setText("Sortera");
        btnAdminSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminSortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAdminSortLayout = new javax.swing.GroupLayout(panelAdminSort);
        panelAdminSort.setLayout(panelAdminSortLayout);
        panelAdminSortLayout.setHorizontalGroup(
            panelAdminSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminSortLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAdminSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdminSort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelAdminSortLayout.createSequentialGroup()
                        .addComponent(radioSortBoats)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radioSortUserId, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelAdminSortLayout.setVerticalGroup(
            panelAdminSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAdminSortLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelAdminSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioSortBoats)
                    .addComponent(radioSortUserId))
                .addGap(18, 18, 18)
                .addComponent(btnAdminSort)
                .addContainerGap())
        );

        panelAdminSearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        radioSearchUserId.setText("Medlems Id");
        radioSearchUserId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSearchUserIdActionPerformed(evt);
            }
        });

        radioAdminSearchDock.setText("Bryggplats");
        radioAdminSearchDock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioAdminSearchDockActionPerformed(evt);
            }
        });

        btnAdminSearch.setText("Sök");
        btnAdminSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAdminSearchLayout = new javax.swing.GroupLayout(panelAdminSearch);
        panelAdminSearch.setLayout(panelAdminSearchLayout);
        panelAdminSearchLayout.setHorizontalGroup(
            panelAdminSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAdminSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAdminSearchLayout.createSequentialGroup()
                        .addComponent(radioSearchUserId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(radioAdminSearchDock))
                    .addComponent(btnAdminSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txfAdminSearch))
                .addContainerGap())
        );
        panelAdminSearchLayout.setVerticalGroup(
            panelAdminSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txfAdminSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAdminSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioAdminSearchDock)
                    .addComponent(radioSearchUserId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, Short.MAX_VALUE)
                .addComponent(btnAdminSearch)
                .addContainerGap())
        );

        panelAdminMessage.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblAdminMessage.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblAdminMessage.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout panelAdminMessageLayout = new javax.swing.GroupLayout(panelAdminMessage);
        panelAdminMessage.setLayout(panelAdminMessageLayout);
        panelAdminMessageLayout.setHorizontalGroup(
            panelAdminMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminMessageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAdminMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelAdminMessageLayout.setVerticalGroup(
            panelAdminMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminMessageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAdminMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnAdminLogout.setText("Logga ut");
        btnAdminLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminLogoutActionPerformed(evt);
            }
        });

        panelRemoveUser.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnRemoveUser.setText("Ta bort");
        btnRemoveUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveUserActionPerformed(evt);
            }
        });

        radioRemoveUserId.setText("Medlems Id");
        radioRemoveUserId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRemoveUserIdActionPerformed(evt);
            }
        });

        radioRemoveBoat.setText("Båt (Bryggplats)");
        radioRemoveBoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRemoveBoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRemoveUserLayout = new javax.swing.GroupLayout(panelRemoveUser);
        panelRemoveUser.setLayout(panelRemoveUserLayout);
        panelRemoveUserLayout.setHorizontalGroup(
            panelRemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRemoveUserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txfAdminRemove)
                    .addComponent(btnRemoveUser, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addGroup(panelRemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioRemoveBoat)
                    .addComponent(radioRemoveUserId))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelRemoveUserLayout.setVerticalGroup(
            panelRemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRemoveUserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfAdminRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radioRemoveUserId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoveUser)
                    .addComponent(radioRemoveBoat))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelAdminLayout = new javax.swing.GroupLayout(panelAdmin);
        panelAdmin.setLayout(panelAdminLayout);
        panelAdminLayout.setHorizontalGroup(
            panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAdminLayout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(btnAdminLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(174, 174, 174))
                    .addGroup(panelAdminLayout.createSequentialGroup()
                        .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAdminLayout.createSequentialGroup()
                                .addComponent(panelAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(panelAddWharf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(panelAddBoat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelAdminMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panelRemoveUser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAdminLayout.createSequentialGroup()
                                .addComponent(panelAdminSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(panelAdminSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        panelAdminLayout.setVerticalGroup(
            panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelAddUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelAddWharf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelAddBoat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelAdminSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelAdminSort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelRemoveUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelAdminMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdminLogout)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel18.setText("Längd");

        jLabel19.setText("Bredd");

        jLabel20.setText("Typ");

        btnUserAddBoat.setText("Lägg till båt");
        btnUserAddBoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserAddBoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUserAddBoat, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfUserLength)
                            .addComponent(txfUserWidth)
                            .addComponent(txfUserType, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txfUserLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txfUserWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txfUserType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUserAddBoat)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        radioSortDock.setText("Bryggplats");
        radioSortDock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSortDockActionPerformed(evt);
            }
        });

        radioSortLength.setText("Längd");
        radioSortLength.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioSortLengthActionPerformed(evt);
            }
        });

        btnUserSort.setText("Sortera");
        btnUserSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserSortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(radioSortDock)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(radioSortLength))
                    .addComponent(btnUserSort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioSortDock)
                    .addComponent(radioSortLength))
                .addGap(18, 18, 18)
                .addComponent(btnUserSort)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        radioUserSearchDock.setText("Bryggplats");
        radioUserSearchDock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioUserSearchDockActionPerformed(evt);
            }
        });

        radioUserSearchUserId.setText("Medlems Id");
        radioUserSearchUserId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioUserSearchUserIdActionPerformed(evt);
            }
        });

        btnUserSearch.setText("Sök");
        btnUserSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUserSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txfUserSearch)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(radioUserSearchDock)
                        .addGap(18, 18, 18)
                        .addComponent(radioUserSearchUserId)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txfUserSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioUserSearchDock)
                    .addComponent(radioUserSearchUserId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUserSearch)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txaUserDisplay.setColumns(20);
        txaUserDisplay.setRows(5);
        jScrollPane2.setViewportView(txaUserDisplay);

        btnClearUserDisplay.setText("Rensa");
        btnClearUserDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearUserDisplayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(btnClearUserDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnClearUserDisplay)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnUserLogout.setText("Logga ut");
        btnUserLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserLogoutActionPerformed(evt);
            }
        });

        jPanel15.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblUserMessage.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblUserMessage.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUserMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUserMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnRemoveBoat.setText("Ta bort båt");
        btnRemoveBoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveBoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txfRemoveBoat)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(btnRemoveBoat, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txfRemoveBoat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRemoveBoat)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(btnUserLogout)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUserLogout)
                .addGap(152, 152, 152))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Användarnamn:");

        jLabel2.setText("Lösenord:");

        btnLogin.setText("Logga in");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        jLabel3.setText("Inloggad som:");

        jLabel15.setText("Medlems Id:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(33, 33, 33))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txfLoginPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                            .addComponent(txfLoginUName)))
                    .addComponent(btnLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCurrentUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCurrentUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(lblLoginMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(57, 57, 57))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLoginMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txfLoginUName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblCurrentUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCurrentUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txfLoginPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogin)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //sets the radio button sort dock to deselceted
    private void radioSortLengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSortLengthActionPerformed
        radioSortDock.setSelected(false);
    }//GEN-LAST:event_radioSortLengthActionPerformed

    //adds a user to the club
    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
        lblAdminMessage.setText("");
        try{
            int phone = Integer.valueOf(txfPhone.getText());
            String fName = txfFName.getText();
            String lName = txfLName.getText();
            String password = txfPassword.getText();
            if (password.matches(".*\\d.*") == false) {
                throw new PasswordFormatExeption();
            }
            else{
                addUser(fName,lName,password,phone);
                txfFName.setText("");
                txfLName.setText("");
                txfPassword.setText("");
                txfPhone.setText("");
                lblAdminMessage.setText("Medlem tillagd");
            }
        }catch(java.lang.NumberFormatException err) {
            lblAdminMessage.setText("Telefonnummer måste vara siffror");
        }catch(PasswordFormatExeption e){
            lblAdminMessage.setText(e.getMessage());
        }catch(Exception e){
            lblAdminMessage.setText("Namn måste vara mer än två bokstäver");
        }
        
    }//GEN-LAST:event_btnAddUserActionPerformed

    //log a user in if the password and username combo is correct
    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        String uName = txfLoginUName.getText();
        String password = txfLoginPassword.getText();
        boolean answer = loginUser(uName, password);
        
        if (uName.equals("admin")) {
            if(answer == true){
                txfAdminLength.setEnabled(true);
                txfAdminOwner.setEnabled(true);
                txfAdminType.setEnabled(true);
                txfAdminWidth.setEnabled(true);
                txfDocks.setEnabled(true);
                txfFName.setEnabled(true);
                txfLName.setEnabled(true);
                txfPassword.setEnabled(true);
                txfPhone.setEnabled(true);
                btnAddUser.setEnabled(true);
                btnAddWharf.setEnabled(true);
                btnAdminAddBoat.setEnabled(true);
                txaAdminDisplay.setEnabled(true);
                btnAdminSort.setEnabled(true);
                btnAdminSearch.setEnabled(true);
                radioSortBoats.setEnabled(true);
                radioSortUserId.setEnabled(true);
                radioSearchUserId.setEnabled(true);
                radioAdminSearchDock.setEnabled(true);
                txfAdminSearch.setEnabled(true);
                btnAdminLogout.setEnabled(true);
                txfAdminRemove.setEnabled(true);
                btnRemoveUser.setEnabled(true);
                radioRemoveUserId.setEnabled(true);
                radioRemoveBoat.setEnabled(true);
                radioSearchUserId.setSelected(true);
                btnClearAdminDisplay.setEnabled(true);
                lblAdminMessage.setText("");
                    
                btnLogin.setEnabled(false);
                txfLoginUName.setEnabled(false);
                txfLoginPassword.setEnabled(false);
                txfLoginUName.setText("");
                txfLoginPassword.setText("");
                lblLoginMessage.setText("");
                
                int indexUser = -1;
                for (int i = 0; i < users.size(); i++) {
                    if (users.get(i).getUName().equals(uName)) {
                        indexUser = i;
                    }
                }

                lblCurrentUserName.setText(users.get(indexUser).getFName() + " " + users.get(indexUser).getLName());
                lblCurrentUserId.setText("" + users.get(indexUser).getUserId());
                
                
            }
            else{
                lblLoginMessage.setText("Fel användarnamn eller lösenord");
            }
        }
        else{
            if(answer == true){
                txfUserLength.setEnabled(true);
                txfUserWidth.setEnabled(true);
                txfUserType.setEnabled(true);
                btnUserAddBoat.setEnabled(true);
                radioSortLength.setEnabled(true);
                radioSortDock.setEnabled(true);
                btnUserSort.setEnabled(true);
                txfUserSearch.setEnabled(true);
                radioUserSearchDock.setEnabled(true);
                radioUserSearchUserId.setEnabled(true);
                btnUserSearch.setEnabled(true);
                txaUserDisplay.setEnabled(true);
                btnUserLogout.setEnabled(true);
                btnRemoveBoat.setEnabled(true);
                txfRemoveBoat.setEnabled(true);
                btnClearUserDisplay.setEnabled(true);

                btnLogin.setEnabled(false);
                txfLoginUName.setEnabled(false);
                txfLoginPassword.setEnabled(false);
                txfLoginUName.setText("");
                txfLoginPassword.setText("");
                lblLoginMessage.setText("");
                
                int indexUser = -1;
                for (int i = 0; i < users.size(); i++) {
                    if (users.get(i).getUName().equals(uName)) {
                        indexUser = i;
                    }
                }

                lblCurrentUserName.setText(users.get(indexUser).getFName() + " " + users.get(indexUser).getLName());
                lblCurrentUserId.setText("" + users.get(indexUser).getUserId());
                
            }
            else{
                lblLoginMessage.setText("Fel användarnamn eller lösenord");
            }
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    //logs the current user out
    private void btnAdminLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminLogoutActionPerformed
        logoutUser();
    }//GEN-LAST:event_btnAdminLogoutActionPerformed

    //log the current user out
    private void btnUserLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserLogoutActionPerformed
        logoutUser();
    }//GEN-LAST:event_btnUserLogoutActionPerformed

    //adds a boat to the selected user
    private void btnAdminAddBoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminAddBoatActionPerformed
        lblAdminMessage.setText("");
        
        try{
            double length = Double.valueOf(txfAdminLength.getText());
            double width = Double.valueOf(txfAdminWidth.getText());
            int owner = Integer.valueOf(txfAdminOwner.getText());
            String type = txfAdminType.getText();
            int wharf = -1;
            
            for (int i = 0; i < wharfs.size(); i++) {
                if (wharfs.get(i).getFull() == false) {
                    wharf = i;
                    break;
                }
            }

            if (wharf < 0) {
                 lblAdminMessage.setText("För få bryggor, skapa en ny brygga ");
            }
            else{
                int ownerIndex = searchUserId(owner);
                addBoat(length,width,ownerIndex,type,wharf); 
                lblAdminMessage.setText("Båt tillagd");
            }
        }catch(java.lang.NumberFormatException err){
            lblAdminMessage.setText("längd, bredd måste vara siffror, Ägare ett heltal");
        }catch(Exception e){
            lblAdminMessage.setText("Ägare måste vara en användare som finns");
        }
    }//GEN-LAST:event_btnAdminAddBoatActionPerformed

    //sets the radiobutton sort userId to unselected when clicked
    private void radioSortBoatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSortBoatsActionPerformed
        radioSortUserId.setSelected(false);
    }//GEN-LAST:event_radioSortBoatsActionPerformed
    
    //sets the radiobutton sort boats to unselected when clicked
    private void radioSortUserIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSortUserIdActionPerformed
        radioSortBoats.setSelected(false);
    }//GEN-LAST:event_radioSortUserIdActionPerformed

    //sorts all the users
    private void btnAdminSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminSortActionPerformed
        if (radioSortUserId.isSelected()) {
            adminSortUserId();
            lblAdminMessage.setText("");
            radioSortUserId.setSelected(false);
            
            writeUsers();
            
        }
        else if(radioSortBoats.isSelected()){
            adminSortUserBoats();
            lblAdminMessage.setText("");
            radioSortBoats.setSelected(false);
            
            writeUsers();
        }
        else{
            lblAdminMessage.setText("Du måste välja ett alternativ");
        }
        
        
    }//GEN-LAST:event_btnAdminSortActionPerformed

    //adds a wharf to the club when clicked
    private void btnAddWharfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddWharfActionPerformed
        lblAdminMessage.setText("");
        
        try{
            int docks = Integer.valueOf(txfDocks.getText());
            addWharf(docks);
            lblAdminMessage.setText("Brygga tillagd");
        }catch(java.lang.NumberFormatException err) {
            lblAdminMessage.setText("Bryggplatser måste vara siffror");
        }catch(Exception e){
            lblUserMessage.setText("Fel, försök igen");
        }
    }//GEN-LAST:event_btnAddWharfActionPerformed

    //searches after a user och bat when clicked
    private void btnAdminSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminSearchActionPerformed
        lblAdminMessage.setText("");
        try{
            int search; 
            if (radioAdminSearchDock.isSelected()) {
                    search = Integer.valueOf(txfAdminSearch.getText()); 
                    int[] result = searchDock(search);

                    if (result[0] == -1) {
                        lblAdminMessage.setText("Bryggplatsen finns inte, sök igen");
                    }
                    else{
                        txaAdminDisplay.setText(users.get(result[0]).getBoat(result[1]).toString());
                    }
            }
            else if(radioSearchUserId.isSelected()){
                if (txfAdminSearch.getText().equals("")) {
                    writeUsers();
                    lblAdminMessage.setText("Skriv in ett medlemsid för att få en specifik användare");
                }
                else{
                    search = Integer.valueOf(txfAdminSearch.getText()); 
                int result = searchUserId(search);
                    if (result == -1) {
                    lblAdminMessage.setText("Medlemen finns inte, sök igen");
                    }
                    else{
                        txaAdminDisplay.setText(users.get(result).toString());
                    }
                }
            }
            else{
                lblAdminMessage.setText("Välj ett alternativ");
            }
        }catch(java.lang.NumberFormatException err){
            lblAdminMessage.setText("Du skriva in en siffra");
        }
        
        
        
        
    }//GEN-LAST:event_btnAdminSearchActionPerformed

    //sets the radiobutton search userId to unselected when clicked
    private void radioSearchUserIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSearchUserIdActionPerformed
        radioAdminSearchDock.setSelected(false);
    }//GEN-LAST:event_radioSearchUserIdActionPerformed

    //sets the radiobutton search userId to unselected when clicked
    private void radioAdminSearchDockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioAdminSearchDockActionPerformed
        radioSearchUserId.setSelected(false);
    }//GEN-LAST:event_radioAdminSearchDockActionPerformed

    //adds a boat to the current user when clicked
    private void btnUserAddBoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserAddBoatActionPerformed
        lblUserMessage.setText("");
        try{
            double length = Double.valueOf(txfUserLength.getText());
            double width = Double.valueOf(txfUserWidth.getText());
            String type = txfUserType.getText();
            
            
            int wharf = -1;
            
            
            
            for (int i = 0; i < wharfs.size(); i++) {
                if (wharfs.get(i).getFull() == false) {
                    wharf = i;
                    break;
                }
            }

            if (wharf < 0) {
                 lblUserMessage.setText("Det finns inte plats för fler båtar, kontakta admin");
            }
            else{
                int ownerIndex = searchUserId(currentUser);
                addBoat(length,width,ownerIndex,type,wharf); 
                lblUserMessage.setText("Båt tillagd");
            }
            
            
        }catch(java.lang.NumberFormatException err) {
            lblUserMessage.setText("Längd och bredd måste vara siffror");
        }catch(Exception e){
            lblUserMessage.setText("Fel, försök igen");
        }
        
        
    }//GEN-LAST:event_btnUserAddBoatActionPerformed

    //sets the radiobutton sort length to unselected when clicked
    private void radioSortDockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioSortDockActionPerformed
        radioSortLength.setSelected(false);
    }//GEN-LAST:event_radioSortDockActionPerformed

    //sets the radiobutton search userId to unselected when clicked
    private void radioUserSearchDockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioUserSearchDockActionPerformed
        radioUserSearchUserId.setSelected(false);
    }//GEN-LAST:event_radioUserSearchDockActionPerformed

    //sets the radiobutton search dock to unselected when clicked
    private void radioUserSearchUserIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioUserSearchUserIdActionPerformed
        radioUserSearchDock.setSelected(false);
    }//GEN-LAST:event_radioUserSearchUserIdActionPerformed

    //sorts a users boats depening on choice
    private void btnUserSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserSortActionPerformed
        txaUserDisplay.setText("");
        lblUserMessage.setText("");
        
        if (radioSortDock.isSelected()) {
            users.get(currentUser).sortDock();
            writeBoats(currentUser);
        }
        else if(radioSortLength.isSelected()){
            users.get(currentUser).sortLength();
            writeBoats(currentUser);
        }
        else{
            lblUserMessage.setText("Du måste välja ett alternativ");
        }
    }//GEN-LAST:event_btnUserSortActionPerformed

    //searches after a user and writes that user out if it exists
    private void btnUserSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserSearchActionPerformed
        txaUserDisplay.setText("");
        lblUserMessage.setText("");
        try{
            //gets the searchvalue and searches for it, writes out a answer depending on the result
            int search; 
            if (radioUserSearchDock.isSelected()) {
                search = Integer.valueOf(txfUserSearch.getText());
                int[] indexSearchDock = searchDock(search);
                if (indexSearchDock[0] == -1) {
                    lblUserMessage.setText("Bryggplatsen finns inte");
                }
                else{
                    txaUserDisplay.setText(users.get(indexSearchDock[0]).getBoat(indexSearchDock[1]).toString());
                }
            }
            else if(radioUserSearchUserId.isSelected()){
                search = Integer.valueOf(txfUserSearch.getText());
                int indexUser = searchUserId(search);
                if (indexUser < 0) {
                    lblUserMessage.setText("Användaren finns inte");
                }
                else if(users.get(indexUser).getBoatsAmount() <1){
                    txaUserDisplay.setText("Användaren har inga båtar registrerade");
                }
                else{
                    writeBoats(indexUser);
                }
            }
            else{
                lblUserMessage.setText("Välj ett alternativ");
            }
        }catch(java.lang.NumberFormatException err) {
            lblUserMessage.setText("Sökning måste vara siffror");
        }catch(Exception e){
            lblUserMessage.setText("Fel, försök igen");
        }
    }//GEN-LAST:event_btnUserSearchActionPerformed

    //removes a boat, if it exists
    private void btnRemoveBoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveBoatActionPerformed
        lblUserMessage.setText("");
        try{
            //gets the enterd boat and removes it if it exists
            int dock = Integer.valueOf(txfRemoveBoat.getText());
            boolean boatRemoved = users.get(currentUser).removeBoat(dock);
            if (boatRemoved == false) {
                lblUserMessage.setText("Det gick inte att ta bort båten");
            }
            else{
                lblUserMessage.setText("Båt borttagen");
            }
        }catch(java.lang.NumberFormatException err){
            lblUserMessage.setText("Du måste skriva in en båtplats");
        }
    }//GEN-LAST:event_btnRemoveBoatActionPerformed

    //removes a user when clicked. If the user does not exist, writes that out to the user
    private void btnRemoveUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveUserActionPerformed
        lblAdminMessage.setText("");
        try{
            //gets the enterd value and checks which radio button is selected and removes the correct use/boat
            int removeIndex = Integer.valueOf(txfAdminRemove.getText());
            if (radioRemoveUserId.isSelected() == true) {
                if (removeIndex == 0) {
                    lblAdminMessage.setText("Du kan inte ta bort admin");
                }
                else{
                    boolean userRemoved = removeUser(removeIndex);
                    if (userRemoved == true) {
                        lblAdminMessage.setText("Medlem borttagen");
                    }
                    else{
                        lblAdminMessage.setText("Det gick inte att ta bort medlemen");
                    }
                }
            }
            else if (radioRemoveBoat.isSelected() == true) {
                boolean boatRemoved = false;
                for (int i = 0; i < users.size(); i++) {
                    boatRemoved = users.get(i).removeBoat(removeIndex);
                    if (boatRemoved==true) {
                        break;
                    }
                }
                if (boatRemoved == true) {
                    removeBoatWharf(removeIndex);
                    lblAdminMessage.setText("Båt borttagen");
                }
                else{
                    lblAdminMessage.setText("Båten finns inte");
                }
            }
            else{
                lblAdminMessage.setText("Välj ett alternativ");
            }
        }catch(java.lang.NumberFormatException err) {
            lblAdminMessage.setText("Måste vara en båtplats eller medlemsnummer");
        }catch(Exception e){
            lblAdminMessage.setText("Fel, försök igen");
        }
    }//GEN-LAST:event_btnRemoveUserActionPerformed

    //sets the radiobutton remove boat to unselected when clicked
    private void radioRemoveUserIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRemoveUserIdActionPerformed
        radioRemoveBoat.setSelected(false);
    }//GEN-LAST:event_radioRemoveUserIdActionPerformed

    //sets the radiobutton remove user to unselected when clicked
    private void radioRemoveBoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRemoveBoatActionPerformed
        radioRemoveUserId.setSelected(false);
    }//GEN-LAST:event_radioRemoveBoatActionPerformed

    //clears the admin display when clicked
    private void btnClearAdminDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAdminDisplayActionPerformed
        txaAdminDisplay.setText("");
    }//GEN-LAST:event_btnClearAdminDisplayActionPerformed

    //clears the user display when clicked
    private void btnClearUserDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearUserDisplayActionPerformed
        txaUserDisplay.setText("");
    }//GEN-LAST:event_btnClearUserDisplayActionPerformed

    /**
     * Checks if the password and username combination is corrent and exists
     * @param uName Username enterd
     * @param passwordLogin password enterd
     * @return true/false if password-username combination is correct
     */
    private boolean loginUser(String uName, String passwordLogin){
        boolean answer = false;
        int indexUser = -1;
        for (int i = 0; i < users.size(); i++) {
            if (users.get(i).getUName().equals(uName)) {
                indexUser = i;
            }
        }
        
        if (indexUser >= 0) {
            String password = users.get(indexUser).getPassword();
            if (password.equals(passwordLogin)) {
                currentUser = indexUser;
                answer = true;
            }
        }
        return answer;
    }
    
    /**
     * Logs the current user out
     */
    private void logoutUser(){
        txfAdminLength.setEnabled(false);
        txfAdminOwner.setEnabled(false);
        txfAdminType.setEnabled(false);
        txfAdminWidth.setEnabled(false);
        txfDocks.setEnabled(false);
        txfFName.setEnabled(false);
        txfLName.setEnabled(false);
        txfPassword.setEnabled(false);
        txfPhone.setEnabled(false);
        btnAddUser.setEnabled(false);
        btnAddWharf.setEnabled(false);
        btnAdminAddBoat.setEnabled(false);
        txaAdminDisplay.setEnabled(false);
        btnAdminSort.setEnabled(false);
        btnAdminSearch.setEnabled(false);
        radioSortBoats.setEnabled(false);
        radioSortUserId.setEnabled(false);
        radioSearchUserId.setEnabled(false);
        radioAdminSearchDock.setEnabled(false);
        txfAdminSearch.setEnabled(false);
        btnAdminLogout.setEnabled(false);
        txfUserLength.setEnabled(false);
        txfUserWidth.setEnabled(false);
        txfUserType.setEnabled(false);
        btnUserAddBoat.setEnabled(false);
        radioSortLength.setEnabled(false);
        radioSortDock.setEnabled(false);
        btnUserSort.setEnabled(false);
        txfUserSearch.setEnabled(false);
        radioUserSearchDock.setEnabled(false);
        radioUserSearchUserId.setEnabled(false);
        btnUserSearch.setEnabled(false);
        txaUserDisplay.setEnabled(false);
        btnUserLogout.setEnabled(false);
        txfAdminRemove.setEnabled(false);
        btnRemoveUser.setEnabled(false);
        btnRemoveBoat.setEnabled(false);
        txfRemoveBoat.setEnabled(false);
        radioRemoveUserId.setEnabled(false);
        radioRemoveBoat.setEnabled(false);
        radioSearchUserId.setSelected(false);
        radioRemoveUserId.setSelected(false);
        radioRemoveBoat.setSelected(false);
        btnClearAdminDisplay.setEnabled(false);
        btnClearUserDisplay.setEnabled(false); 
        
        btnLogin.setEnabled(true);
        txfLoginUName.setEnabled(true);
        txfLoginPassword.setEnabled(true);
        
        lblAdminMessage.setText("");
        txaAdminDisplay.setText("");
        txfDocks.setText("");
        txfFName.setText("");
        txfLName.setText("");
        txfPassword.setText("");
        txfPhone.setText("");
        txfAdminLength.setText("");
        txfAdminWidth.setText("");
        txfAdminType.setText("");
        txfAdminOwner.setText("");
        txfAdminSearch.setText("");
        txaUserDisplay.setText("");
        lblUserMessage.setText("");
        txfAdminRemove.setText("");
        lblCurrentUserName.setText("");
        lblCurrentUserId.setText("");
        txfUserLength.setText("");
        txfUserWidth.setText("");
        txfUserType.setText("");
        txfRemoveBoat.setText("");
        txfUserSearch.setText("");
        radioSortLength.setSelected(false);
        radioSortDock.setSelected(false);
        radioUserSearchUserId.setSelected(false);
        radioUserSearchDock.setSelected(false);
        radioSortBoats.setSelected(false);
        radioSortUserId.setSelected(false);
    }
    
    /**
     * Adds a user to the club
     * @param fName first name
     * @param lName last name
     * @param password password desierd
     * @param phone users phone number
     */
    private void addUser(String fName, String lName, String password, int phone){
        String uName;
        uName = fName.substring(0,2) + lName.substring(0,2);
        
        int userId = userAmount;
        User member = new User(userId,phone,uName,fName,lName,password);
        
        users.add(member);
        
        userAmount++;
    }
    
    /**
     * removes a user from the arraylist users
     * @param userId the user to be removed
     * @return true/false dependning on if the user was removed
     */
    private boolean removeUser(int userId){
        boolean removedUser;
        int userIndex = searchUserId(userId);
        
        if (userIndex == -1) {
            removedUser = false;
        }
        else{
            users.remove(userIndex);
            removedUser = true;
        }
        return removedUser;
    }
    
    /**
     * finds the boat in the correct dock and removes it from the dock
     * @param dock the dock where to boat is
     * @return true/false dependeing on the result
     */
    private boolean removeBoatWharf(int dock){
        boolean boatRemoved = false;
        for (int i = 0; i < wharfs.size(); i++) {
            boatRemoved = wharfs.get(i).removeBoat(dock);
            if (boatRemoved == true) {
                boatRemoved = true;
                break;
            }
        }
        
        return boatRemoved;
    }
    
    /**
     * adds a boat to the correct user and wharf
     * @param length boats length
     * @param width boats width
     * @param owner owner of boat
     * @param type boats type
     * @param dock correct dock
     */
    private void addBoat(double length, double width, int owner, String type, int dock){
        Boat boat = new Boat(length,width,docksAmount,owner,type);
        
        users.get(owner).addBoat(length, width, docksAmount, type);
        wharfs.get(dock).addBoat(boat);
         
        docksAmount++;
    }
    
    /**
     * adds a wharf
     * @param docks the amount of docks in the wharf 
     */
    private void addWharf(int docks){
        Wharf wharf = new Wharf(docks);
        wharfs.add(wharf);
    }
    
    /**
     * searches after a boat in a dock
     * @param search the dock to be searched after
     * @return returns the index of the user who owns the boat and the index of the boat in the users list of boats
     */
    private int[] searchDock(int search){
        int[] answer = {-1,-1};
        
        for (int i = 0; i < users.size(); i++) {
            ArrayList<Boat> temp = users.get(i).getBoats();
            for (int j = 0; j < temp.size(); j++) {
                if (temp.get(j).getDock() == search) {
                    answer[0]=i;
                    answer[1]=j;
                }
            }
        }
        return answer;
    }
    
    /**
     * searches after a user by id
     * @param search the user id of the desierd user
     * @return index in users
     */
    private int searchUserId(int search){
        int answer = -1;
        for (int i = 0; i < users.size(); i++) {
            if (users.get(i).getUserId() == search) {
                answer = i;
            }
        }
        return answer;
    }
    
    /**
     * Sorts the users by user id
     */
    private void adminSortUserId(){
        for (int m = users.size()-1; m >= 0; m--) {
            
            for (int n = 0; n < m; n++) {
                
                if (users.get(n).getUserId() > users.get(n+1).getUserId()) {
                    User temp = users.get(n);
                    users.set(n, users.get(n+1));
                    users.set(n+1, temp);
                }
                
            }
            
        }
    }
    
    /**
     * Sorts the users by amount of boats owned
     */
    private void adminSortUserBoats(){
        for (int m = users.size()-1; m >= 0; m--) {
            
            for (int n = 0; n < m; n++) {
                
                if (users.get(n).getBoatsAmount() > users.get(n+1).getBoatsAmount()) {
                    User temp = users.get(n);
                    users.set(n, users.get(n+1));
                    users.set(n+1, temp);
                }
                
            }
            
        }
    }
    
    /**
     * writes out the boats of the desierd user to the user display
     */
    private void writeBoats(int indexUser){
        txaUserDisplay.setText("");
        ArrayList<Boat> temp = users.get(currentUser).getBoats();
        for (int i = 0; i < temp.size(); i++) {
            txaUserDisplay.append(temp.get(i).toString() + "\n");
        }
    }
    
    /**
     * writes out the users to the admin display
     */
    private void writeUsers(){
        txaAdminDisplay.setText("");
        for (int i = 0; i < users.size(); i++) {
            if (users.get(i).getUName().equals("admin")) {
                
            }
            else{
                txaAdminDisplay.append(users.get(i).toString() + "\n");   
            }
        }
    }
    
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Båtklubb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Båtklubb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Båtklubb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Båtklubb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Båtklubb().setVisible(true);
            }
        });
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddUser;
    private javax.swing.JButton btnAddWharf;
    private javax.swing.JButton btnAdminAddBoat;
    private javax.swing.JButton btnAdminLogout;
    private javax.swing.JButton btnAdminSearch;
    private javax.swing.JButton btnAdminSort;
    private javax.swing.JButton btnClearAdminDisplay;
    private javax.swing.JButton btnClearUserDisplay;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnRemoveBoat;
    private javax.swing.JButton btnRemoveUser;
    private javax.swing.JButton btnUserAddBoat;
    private javax.swing.JButton btnUserLogout;
    private javax.swing.JButton btnUserSearch;
    private javax.swing.JButton btnUserSort;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAdminMessage;
    private javax.swing.JLabel lblCurrentUserId;
    private javax.swing.JLabel lblCurrentUserName;
    private javax.swing.JLabel lblLoginMessage;
    private javax.swing.JLabel lblUserMessage;
    private javax.swing.JPanel panelAddBoat;
    private javax.swing.JPanel panelAddUser;
    private javax.swing.JPanel panelAddWharf;
    private javax.swing.JPanel panelAdmin;
    private javax.swing.JPanel panelAdminMessage;
    private javax.swing.JPanel panelAdminSearch;
    private javax.swing.JPanel panelAdminSort;
    private javax.swing.JPanel panelDisplay;
    private javax.swing.JPanel panelRemoveUser;
    private javax.swing.JRadioButton radioAdminSearchDock;
    private javax.swing.JRadioButton radioRemoveBoat;
    private javax.swing.JRadioButton radioRemoveUserId;
    private javax.swing.JRadioButton radioSearchUserId;
    private javax.swing.JRadioButton radioSortBoats;
    private javax.swing.JRadioButton radioSortDock;
    private javax.swing.JRadioButton radioSortLength;
    private javax.swing.JRadioButton radioSortUserId;
    private javax.swing.JRadioButton radioUserSearchDock;
    private javax.swing.JRadioButton radioUserSearchUserId;
    private javax.swing.JTextArea txaAdminDisplay;
    private javax.swing.JTextArea txaUserDisplay;
    private javax.swing.JTextField txfAdminLength;
    private javax.swing.JTextField txfAdminOwner;
    private javax.swing.JTextField txfAdminRemove;
    private javax.swing.JTextField txfAdminSearch;
    private javax.swing.JTextField txfAdminType;
    private javax.swing.JTextField txfAdminWidth;
    private javax.swing.JTextField txfDocks;
    private javax.swing.JTextField txfFName;
    private javax.swing.JTextField txfLName;
    private javax.swing.JPasswordField txfLoginPassword;
    private javax.swing.JTextField txfLoginUName;
    private javax.swing.JTextField txfPassword;
    private javax.swing.JTextField txfPhone;
    private javax.swing.JTextField txfRemoveBoat;
    private javax.swing.JTextField txfUserLength;
    private javax.swing.JTextField txfUserSearch;
    private javax.swing.JTextField txfUserType;
    private javax.swing.JTextField txfUserWidth;
    // End of variables declaration//GEN-END:variables
}
